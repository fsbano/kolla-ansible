---
- name: Install required packages
  ansible.builtin.pip:
    name: "{{ kolla_ansible_tempest_packages + kolla_ansible_tempest_packages_extra }}"
    virtualenv: "{{ kolla_ansible_venv_path }}"
    virtualenv_command: "python3 -m venv"

- name: Init tempest workspace
  ansible.builtin.shell:
    cmd: >
      {{ kolla_ansible_venv_path }}/bin/tempest init tempest
      >/tmp/logs/ansible/test-init-tempest 2>&1
    creates: "/home/zuul/tempest"

- name: Discover tempest config
  vars:
    ver: "{{ kolla_ansible_tempest_cirros_ver }}"
    image: "https://download.cirros-cloud.net/{{ ver }}/cirros-{{ ver }}-x86_64-disk.img"
  ansible.builtin.shell:
    chdir: "/home/zuul/tempest"
    cmd: >
      {{ kolla_ansible_venv_path }}/bin/discover-tempest-config
      --debug
      --image {{ image }}
      --os-cloud kolla-admin
      >/tmp/logs/ansible/test-init-tempest-discover 2>&1
  environment:
    OS_CLIENT_CONFIG_FILE: "/etc/kolla/clouds.yaml"

- name: Run tempest tests
  environment:
    OS_LOG_CAPTURE: "1"
    OS_STDOUT_CAPTURE: "1"
    OS_STDERR_CAPTURE: "1"
    OS_TEST_TIMEOUT: "3600"
  vars:
    tempest_log_file: "test-tempest-run{{ '-post-upgrade' if post_upgrade | bool else '' }}"
  ansible.builtin.shell:
    chdir: "/home/zuul/tempest"
    cmd: >
      {{ kolla_ansible_venv_path }}/bin/tempest run
      --config-file etc/tempest.conf
      {% if kolla_ansible_tempest_regex | length > 0 %}
      --regex '{{ kolla_ansible_tempest_regex }}'
      {% endif %}
      {% if kolla_ansible_tempest_exclude_regex | length > 0 %}
      --exclude-regex '{{ kolla_ansible_tempest_exclude_regex }}'
      {% endif %}
      >/tmp/logs/ansible/{{ tempest_log_file }} 2>&1
